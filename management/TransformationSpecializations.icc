/// @file TransformationSpecializations.icc
/// @author Script generated.

  if (trans_code == translation::kGeneric && rot_code == 0x1b1) {
    return VolumeType::template Create<translation::kGeneric, 0x1b1>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x1b1) {
    return VolumeType::template Create<translation::kIdentity, 0x1b1>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kGeneric && rot_code == 0x18e) {
    return VolumeType::template Create<translation::kGeneric, 0x18e>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x18e) {
    return VolumeType::template Create<translation::kIdentity, 0x18e>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kGeneric && rot_code == 0x076) {
    return VolumeType::template Create<translation::kGeneric, 0x076>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x076) {
    return VolumeType::template Create<translation::kIdentity, 0x076>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kGeneric && rot_code == 0x16a) {
    return VolumeType::template Create<translation::kGeneric, 0x16a>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x16a) {
    return VolumeType::template Create<translation::kIdentity, 0x16a>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kGeneric && rot_code == 0x155) {
    return VolumeType::template Create<translation::kGeneric, 0x155>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x155) {
    return VolumeType::template Create<translation::kIdentity, 0x155>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kGeneric && rot_code == 0x0ad) {
    return VolumeType::template Create<translation::kGeneric, 0x0ad>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x0ad) {
    return VolumeType::template Create<translation::kIdentity, 0x0ad>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kGeneric && rot_code == 0x0dc) {
    return VolumeType::template Create<translation::kGeneric, 0x0dc>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x0dc) {
    return VolumeType::template Create<translation::kIdentity, 0x0dc>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kGeneric && rot_code == 0x0e3) {
    return VolumeType::template Create<translation::kGeneric, 0x0e3>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x0e3) {
    return VolumeType::template Create<translation::kIdentity, 0x0e3>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kGeneric && rot_code == 0x11b) {
    return VolumeType::template Create<translation::kGeneric, 0x11b>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x11b) {
    return VolumeType::template Create<translation::kIdentity, 0x11b>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kGeneric && rot_code == 0x0a1) {
    return VolumeType::template Create<translation::kGeneric, 0x0a1>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x0a1) {
    return VolumeType::template Create<translation::kIdentity, 0x0a1>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kGeneric && rot_code == 0x10a) {
    return VolumeType::template Create<translation::kGeneric, 0x10a>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x10a) {
    return VolumeType::template Create<translation::kIdentity, 0x10a>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kGeneric && rot_code == 0x046) {
    return VolumeType::template Create<translation::kGeneric, 0x046>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x046) {
    return VolumeType::template Create<translation::kIdentity, 0x046>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kGeneric && rot_code == 0x062) {
    return VolumeType::template Create<translation::kGeneric, 0x062>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x062) {
    return VolumeType::template Create<translation::kIdentity, 0x062>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kGeneric && rot_code == 0x054) {
    return VolumeType::template Create<translation::kGeneric, 0x054>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x054) {
    return VolumeType::template Create<translation::kIdentity, 0x054>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kGeneric && rot_code == 0x111) {
    return VolumeType::template Create<translation::kGeneric, 0x111>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x111) {
    return VolumeType::template Create<translation::kIdentity, 0x111>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kGeneric && rot_code == 0x200) {
    return VolumeType::template Create<translation::kGeneric, 0x200>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }
  if (trans_code == translation::kIdentity && rot_code == 0x200) {
    return VolumeType::template Create<translation::kIdentity, 0x200>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);
  }

  return VolumeType::template Create<translation::kGeneric, rotation::kGeneric>(
      logical_volume, transformation,
#ifdef VECGEOM_NVCC
           id,
#endif
      placement);